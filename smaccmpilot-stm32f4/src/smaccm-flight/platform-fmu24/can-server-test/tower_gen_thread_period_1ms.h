/* This file has been autogenerated by Ivory
 * Compiler version  0.1.0.5
 */
#ifndef __TOWER_GEN_THREAD_PERIOD_1MS_H__
#define __TOWER_GEN_THREAD_PERIOD_1MS_H__
#ifdef __cplusplus
extern "C" {
#endif
#include "ivory.h"
#include "canDriverTypes.h"
#include "heartbeat_types.h"
#include "time_micros_types.h"
#include "arming_mode_types.h"
#include "sequence_numbered_packed_status_types.h"
#include "sequence_num_types.h"
#include "packed_status_types.h"
#include "gps_fix_types.h"
#include "tristate_types.h"
#include "control_modes_types.h"
#include "control_source_types.h"
#include "yaw_mode_types.h"
#include "throttle_mode_types.h"
#include "sequence_numbered_control_law_types.h"
#include "control_law_types.h"
#include "sequence_numbered_rc_input_types.h"
#include "rc_input_types.h"
#include "sequence_numbered_user_input_result_types.h"
#include "user_input_result_types.h"
#include "user_input_types.h"
#include "sequence_numbered_sensors_result_types.h"
#include "sensors_result_types.h"
#include "xyz_types.h"
#include "quaternion_types.h"
#include "sequence_numbered_gyroscope_sample_types.h"
#include "gyroscope_sample_types.h"
#include "sequence_numbered_accelerometer_sample_types.h"
#include "accelerometer_sample_types.h"
#include "sequence_numbered_barometer_sample_types.h"
#include "barometer_sample_types.h"
#include "sequence_numbered_lidarlite_sample_types.h"
#include "lidarlite_sample_types.h"
#include "sequence_numbered_magnetometer_sample_types.h"
#include "magnetometer_sample_types.h"
#include "sequence_numbered_px4flow_integral_sample_types.h"
#include "px4flow_integral_sample_types.h"
#include "sequence_numbered_px4flow_sample_types.h"
#include "px4flow_sample_types.h"
#include "sequence_numbered_position_sample_types.h"
#include "position_sample_types.h"
#include "sequence_numbered_control_setpoint_types.h"
#include "control_setpoint_types.h"
#include "sequence_numbered_control_output_types.h"
#include "control_output_types.h"
#include "sequence_numbered_quadcopter_motors_types.h"
#include "quadcopter_motors_types.h"
#include "sequence_numbered_att_control_debug_types.h"
#include "att_control_debug_types.h"
#include "pid_state_types.h"
#include "sequence_numbered_alt_control_debug_types.h"
#include "alt_control_debug_types.h"
#include "sequence_numbered_px4io_state_types.h"
#include "px4io_state_types.h"
#include "px4io_status_types.h"
#include "px4io_alarms_types.h"
#include "sequence_numbered_arming_status_types.h"
#include "arming_status_types.h"
#include "sequence_numbered_float_types.h"
#include "sequence_numbered_pid_config_types.h"
#include "pid_config_types.h"
#include "sequence_numbered_throttle_ui_types.h"
#include "throttle_ui_types.h"
#include "sequence_numbered_stab_config_types.h"
#include "stab_config_types.h"
#include "sequence_numbered_tristate_types.h"
#include "sequence_numbered_control_modes_types.h"
#include "sequence_numbered_user_input_types.h"
#include "sequence_numbered_rgb_led_setting_types.h"
#include "rgb_led_setting_types.h"
#include "sequence_numbered_camera_target_types.h"
#include "camera_target_types.h"
#include "sequence_numbered_reboot_req_types.h"
#include "reboot_req_types.h"
#include "reboot_magic_types.h"
#include "ivory_serialize.h"
#include "gps_common.h"
#include "spiDriverTypes.h"
#include "mpu6000_response_types.h"
#include "ms5611_types.h"
#include "i2cTowerTypes.h"
#include "attitude_filter.h"
#include "tower_user_thread_period_1ms.h"
#include "tower_gen_monitor_frameBuffer.h"
#include "tower_gen_monitor_fragment_reassembly.h"
#include "tower_gen_monitor_controllableVehicleConsumerOutput.h"
#include "tower_gen_monitor_reboot_req_attrServer.h"
#include "tower_gen_monitor_controllableVehicleProducerInput.h"
#include "tower_gen_monitor_fragment_blindly_0x100.h"
#include "tower_gen_monitor_fragment_0x100.h"
#include "tower_gen_monitor_can1PeripheralDriver.h"
#include "tower_gen_monitor_nominal_throttle_attrServer.h"
#include "tower_gen_monitor_altitude_rate_pid_attrServer.h"
#include "tower_gen_monitor_altitude_position_pid_attrServer.h"
#include "tower_gen_monitor_throttle_ui_attrServer.h"
#include "tower_gen_monitor_attitude_roll_stab_attrServer.h"
#include "tower_gen_monitor_attitude_pitch_stab_attrServer.h"
#include "tower_gen_monitor_yaw_rate_pid_attrServer.h"
#include "tower_gen_monitor_yaw_position_pid_attrServer.h"
#include "tower_gen_monitor_arming_request_attrServer.h"
#include "tower_gen_monitor_control_modes_request_attrServer.h"
#include "tower_gen_monitor_user_input_request_attrServer.h"
#include "tower_gen_monitor_rgb_led_attrServer.h"
#include "tower_gen_monitor_rgbled.h"
#include "tower_gen_monitor_i2c2PeripheralDriver.h"
#include "tower_gen_monitor_camera_target_input_attrServer.h"
#include "tower_gen_monitor_packed_status_attrServer.h"
#include "tower_gen_monitor_control_law_attrServer.h"
#include "tower_gen_monitor_rc_input_attrServer.h"
#include "tower_gen_monitor_user_input_attrServer.h"
#include "tower_gen_monitor_sensors_output_attrServer.h"
#include "tower_gen_monitor_gyro_output_attrServer.h"
#include "tower_gen_monitor_accel_output_attrServer.h"
#include "tower_gen_monitor_baro_output_attrServer.h"
#include "tower_gen_monitor_lidarlite_output_attrServer.h"
#include "tower_gen_monitor_mag_output_attrServer.h"
#include "tower_gen_monitor_px4flow_int_output_attrServer.h"
#include "tower_gen_monitor_px4flow_output_attrServer.h"
#include "tower_gen_monitor_gps_output_attrServer.h"
#include "tower_gen_monitor_control_setpoint_attrServer.h"
#include "tower_gen_monitor_control_output_attrServer.h"
#include "tower_gen_monitor_motor_output_attrServer.h"
#include "tower_gen_monitor_att_control_debug_attrServer.h"
#include "tower_gen_monitor_alt_control_debug_attrServer.h"
#include "tower_gen_monitor_px4io_state_attrServer.h"
#include "tower_gen_monitor_arming_status_attrServer.h"
#include "tower_gen_monitor_battery_voltage_attrServer.h"
#include "tower_gen_monitor_spi1PeripheralDriver.h"
#include "tower_gen_monitor_spi1_scheduler.h"
#include "tower_gen_monitor_mpu6kCtl.h"
#include "tower_gen_monitor_detectMotion.h"
#include "tower_gen_monitor_gyro_output_attrProxy.h"
#include "tower_gen_monitor_att_est_sensor_fusion.h"
#include "tower_gen_monitor_sensor_fusion_proxy.h"
#include "tower_gen_monitor_motion_light_debug.h"
#include "tower_gen_monitor_accel_output_attrProxy.h"
#include "tower_gen_monitor_lsm303dSensorManager.h"
#include "tower_gen_monitor_mag_output_attrProxy.h"
#include "tower_gen_monitor_ms5611SPISensorManager.h"
#include "tower_gen_monitor_baro_output_attrProxy.h"
#include "tower_gen_monitor_l3gd20Ctl.h"
#include "tower_gen_monitor_i2c1PeripheralDriver.h"
#include "tower_gen_monitor_lidarlite_sensor_manager.h"
#include "tower_gen_monitor_i2c1_schedulerasync.h"
#include "tower_gen_monitor_lidarlite_output_attrProxy.h"
#include "tower_gen_monitor_px4flow_sensor_manager.h"
#include "tower_gen_monitor_px4flow_output_attrProxy.h"
#include <freertos_task_wrapper.h>
#include <freertos_time_wrapper.h>
void loop_thread_period_1ms(struct taskarg *n_var0);
void emitter_set_chan_190_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_init_3_chan_190_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_i2c2_request_chan_191_thread_period_1ms_emit(const struct i2c_transaction_result *n_var0);
void emitter_i2c2_ready_period_chan_192_thread_period_1ms_emit(const int64_t *n_var0);
void emitter_new_state_chan_29_thread_period_1ms_emit(const struct sensors_result *n_var0);
void emitter_att_est_gyro_chan_189_thread_period_1ms_emit(const struct AhrsMlkf *n_var0);
void emitter_att_est_mag_chan_189_thread_period_1ms_emit(const struct AhrsMlkf *n_var0);
void emitter_att_est_accel_chan_189_thread_period_1ms_emit(const struct AhrsMlkf *n_var0);
void emitter_write_mag_output_attr_chan_34_thread_period_1ms_emit(const struct magnetometer_sample *n_var0);
void emitter_write_gyro_output_attr_chan_30_thread_period_1ms_emit(const struct gyroscope_sample *n_var0);
void emitter_write_baro_output_attr_chan_32_thread_period_1ms_emit(const struct barometer_sample *n_var0);
void emitter_write_px4flow_output_attr_chan_36_thread_period_1ms_emit(const struct px4flow_sample *n_var0);
void emitter_write_lidarlite_output_attr_chan_33_thread_period_1ms_emit(const struct lidarlite_sample *n_var0);
void emitter_write_accel_output_attr_chan_31_thread_period_1ms_emit(const struct accelerometer_sample *n_var0);
void emitter_motion_light_debug_2_chan_23_thread_period_1ms_emit(const struct rgb_led_setting *n_var0);
void emitter_detectMotion_2_accel_chan_188_thread_period_1ms_emit(const bool *n_var0);
void emitter_i2c1_schedulerasync_reschedule_chan_179_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_i2c1_schedulerasync_reschedule_chan_183_thread_period_1ms_emit(const struct i2c_transaction_result *n_var0);
void emitter_i2c1_schedulerasync_reschedule_chan_186_thread_period_1ms_emit(const struct i2c_transaction_result *n_var0);
void emitter_i2c1_schedulerasync_px4flow_chan_179_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_i2c1_schedulerasync_lidarlite_chan_179_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_px4flow_coroutine_raw_chan_187_thread_period_1ms_emit(const bool *n_var0);
void emitter_px4flow_coroutine_init_chan_187_thread_period_1ms_emit(const bool *n_var0);
void emitter_px4flow_coroutine_chan_185_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_px4flow_coroutine_chan_154_thread_period_1ms_emit(const struct px4flow_sample *n_var0);
void emitter_lidarlite_coroutine_raw_chan_184_thread_period_1ms_emit(const bool *n_var0);
void emitter_lidarlite_coroutine_init_chan_184_thread_period_1ms_emit(const bool *n_var0);
void emitter_lidarlite_coroutine_chan_182_thread_period_1ms_emit(const struct i2c_transaction_request *n_var0);
void emitter_lidarlite_coroutine_chan_153_thread_period_1ms_emit(const struct lidarlite_sample *n_var0);
void emitter_i2c1_request_chan_180_thread_period_1ms_emit(const struct i2c_transaction_result *n_var0);
void emitter_i2c1_ready_period_chan_181_thread_period_1ms_emit(const int64_t *n_var0);
void emitter_spi1_scheduler_response_chan_158_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_spi1_scheduler_response_chan_168_thread_period_1ms_emit(const struct spi_transaction_result *n_var0);
void emitter_spi1_scheduler_response_chan_171_thread_period_1ms_emit(const struct spi_transaction_result *n_var0);
void emitter_spi1_scheduler_response_chan_176_thread_period_1ms_emit(const struct spi_transaction_result *n_var0);
void emitter_spi1_scheduler_response_chan_165_thread_period_1ms_emit(const struct spi_transaction_result *n_var0);
void emitter_spi1_scheduler_l3gd20_chan_158_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_spi1_scheduler_ms5611_chan_158_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_spi1_scheduler_lsm303d_chan_158_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_spi1_scheduler_mpu6000_chan_158_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_ms5611_raw_chan_178_thread_period_1ms_emit(const bool *n_var0);
void emitter_ms5611_init_chan_178_thread_period_1ms_emit(const bool *n_var0);
void emitter_ms5611_chan_175_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_ms5611_chan_177_thread_period_1ms_emit(const struct barometer_sample *n_var0);
void emitter_lsm303d_coroutine_raw_chan_174_thread_period_1ms_emit(const bool *n_var0);
void emitter_lsm303d_coroutine_init_chan_174_thread_period_1ms_emit(const bool *n_var0);
void emitter_lsm303d_coroutine_chan_170_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_lsm303d_coroutine_chan_172_thread_period_1ms_emit(const struct magnetometer_sample *n_var0);
void emitter_mpu6000_raw_chan_169_thread_period_1ms_emit(const bool *n_var0);
void emitter_mpu6000_init_chan_169_thread_period_1ms_emit(const bool *n_var0);
void emitter_mpu6000_chan_167_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_mpu6000_chan_157_thread_period_1ms_emit(const struct gyroscope_sample *n_var0);
void emitter_mpu6000_chan_156_thread_period_1ms_emit(const struct accelerometer_sample *n_var0);
void emitter_l3gd20_raw_chan_166_thread_period_1ms_emit(const bool *n_var0);
void emitter_l3gd20_chan_164_thread_period_1ms_emit(const struct spi_transaction_request *n_var0);
void emitter_l3gd20_chan_162_thread_period_1ms_emit(const int64_t *n_var0);
void emitter_spi_shutdown_watchdog_chan_159_thread_period_1ms_emit(const struct spi_transaction_result *n_var0);
void emitter_new_msg_chan_144_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_new_msg_chan_145_thread_period_1ms_emit(const bool *n_var0);
void emitter_fragment_abort_0x100_chan_4_thread_period_1ms_emit(const bool *n_var0);
void emitter_fragment_req_0x100_chan_2_thread_period_1ms_emit(const struct can_message *n_var0);
void emitter_receive_msg_chan_47_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_periodic_pop_chan_143_thread_period_1ms_emit(const struct can_message *n_var0);
void emitter_batteryVoltageGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_armingStatusGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_px4ioStateGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_altControlDebugGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_attControlDebugGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_motorOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_controlOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_controlSetpointGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_gpsOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_px4flowOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_px4flowIntOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_magOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_lidarliteOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_baroOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_accelOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_gyroOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_sensorsOutputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_userInputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_rcInputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_controlLawGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_packedStatusGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_cameraTargetInputGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_rgbLedGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_rgbLedSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_userInputRequestGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_userInputRequestSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_controlModesRequestGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_controlModesRequestSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_armingRequestGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_armingRequestSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_yawPositionPidGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_yawPositionPidSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_yawRatePidGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_yawRatePidSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_attitudePitchStabGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_attitudePitchStabSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_attitudeRollStabGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_attitudeRollStabSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_throttleUiGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_throttleUiSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_altitudePositionPidGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_altitudePositionPidSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_altitudeRatePidGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_altitudeRatePidSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_nominalThrottleGetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_nominalThrottleSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_rebootReqSetRespProducer_chan_142_thread_period_1ms_emit(const uint8_t n_var0[80U]);
void emitter_battery_voltage_attrGet_chan_141_thread_period_1ms_emit(const struct sequence_numbered_float *n_var0);
void emitter_arming_status_attrGet_chan_140_thread_period_1ms_emit(const struct sequence_numbered_arming_status *n_var0);
void emitter_px4io_state_attrGet_chan_139_thread_period_1ms_emit(const struct sequence_numbered_px4io_state *n_var0);
void emitter_alt_control_debug_attrGet_chan_138_thread_period_1ms_emit(const struct sequence_numbered_alt_control_debug *n_var0);
void emitter_att_control_debug_attrGet_chan_137_thread_period_1ms_emit(const struct sequence_numbered_att_control_debug *n_var0);
void emitter_motor_output_attrGet_chan_136_thread_period_1ms_emit(const struct sequence_numbered_quadcopter_motors *n_var0);
void emitter_control_output_attrGet_chan_135_thread_period_1ms_emit(const struct sequence_numbered_control_output *n_var0);
void emitter_control_setpoint_attrGet_chan_134_thread_period_1ms_emit(const struct sequence_numbered_control_setpoint *n_var0);
void emitter_gps_output_attrGet_chan_133_thread_period_1ms_emit(const struct sequence_numbered_position_sample *n_var0);
void emitter_px4flow_output_attrGet_chan_132_thread_period_1ms_emit(const struct sequence_numbered_px4flow_sample *n_var0);
void emitter_px4flow_int_output_attrGet_chan_131_thread_period_1ms_emit(const struct sequence_numbered_px4flow_integral_sample *n_var0);
void emitter_mag_output_attrGet_chan_130_thread_period_1ms_emit(const struct sequence_numbered_magnetometer_sample *n_var0);
void emitter_lidarlite_output_attrGet_chan_129_thread_period_1ms_emit(const struct sequence_numbered_lidarlite_sample *n_var0);
void emitter_baro_output_attrGet_chan_128_thread_period_1ms_emit(const struct sequence_numbered_barometer_sample *n_var0);
void emitter_accel_output_attrGet_chan_127_thread_period_1ms_emit(const struct sequence_numbered_accelerometer_sample *n_var0);
void emitter_gyro_output_attrGet_chan_126_thread_period_1ms_emit(const struct sequence_numbered_gyroscope_sample *n_var0);
void emitter_sensors_output_attrGet_chan_125_thread_period_1ms_emit(const struct sequence_numbered_sensors_result *n_var0);
void emitter_user_input_attrGet_chan_124_thread_period_1ms_emit(const struct sequence_numbered_user_input_result *n_var0);
void emitter_rc_input_attrGet_chan_123_thread_period_1ms_emit(const struct sequence_numbered_rc_input *n_var0);
void emitter_control_law_attrGet_chan_122_thread_period_1ms_emit(const struct sequence_numbered_control_law *n_var0);
void emitter_packed_status_attrGet_chan_121_thread_period_1ms_emit(const struct sequence_numbered_packed_status *n_var0);
void emitter_camera_target_input_attrGet_chan_120_thread_period_1ms_emit(const struct sequence_numbered_camera_target *n_var0);
void emitter_rgb_led_attrSet_chan_23_thread_period_1ms_emit(const struct rgb_led_setting *n_var0);
void emitter_rgb_led_attrSet_chan_119_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_rgb_led_attrGet_chan_118_thread_period_1ms_emit(const struct sequence_numbered_rgb_led_setting *n_var0);
void emitter_user_input_request_attrSet_chan_22_thread_period_1ms_emit(const struct user_input *n_var0);
void emitter_user_input_request_attrSet_chan_117_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_user_input_request_attrGet_chan_116_thread_period_1ms_emit(const struct sequence_numbered_user_input *n_var0);
void emitter_control_modes_request_attrSet_chan_21_thread_period_1ms_emit(const struct control_modes *n_var0);
void emitter_control_modes_request_attrSet_chan_115_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_control_modes_request_attrGet_chan_114_thread_period_1ms_emit(const struct sequence_numbered_control_modes *n_var0);
void emitter_arming_request_attrSet_chan_20_thread_period_1ms_emit(const uint8_t *n_var0);
void emitter_arming_request_attrSet_chan_113_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_arming_request_attrGet_chan_112_thread_period_1ms_emit(const struct sequence_numbered_tristate *n_var0);
void emitter_yaw_position_pid_attrSet_chan_19_thread_period_1ms_emit(const struct pid_config *n_var0);
void emitter_yaw_position_pid_attrSet_chan_111_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_yaw_position_pid_attrGet_chan_110_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_yaw_rate_pid_attrSet_chan_18_thread_period_1ms_emit(const struct pid_config *n_var0);
void emitter_yaw_rate_pid_attrSet_chan_109_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_yaw_rate_pid_attrGet_chan_108_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_attitude_pitch_stab_attrSet_chan_17_thread_period_1ms_emit(const struct stab_config *n_var0);
void emitter_attitude_pitch_stab_attrSet_chan_107_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_attitude_pitch_stab_attrGet_chan_106_thread_period_1ms_emit(const struct sequence_numbered_stab_config *n_var0);
void emitter_attitude_roll_stab_attrSet_chan_16_thread_period_1ms_emit(const struct stab_config *n_var0);
void emitter_attitude_roll_stab_attrSet_chan_105_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_attitude_roll_stab_attrGet_chan_104_thread_period_1ms_emit(const struct sequence_numbered_stab_config *n_var0);
void emitter_throttle_ui_attrSet_chan_15_thread_period_1ms_emit(const struct throttle_ui *n_var0);
void emitter_throttle_ui_attrSet_chan_103_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_throttle_ui_attrGet_chan_102_thread_period_1ms_emit(const struct sequence_numbered_throttle_ui *n_var0);
void emitter_altitude_position_pid_attrSet_chan_14_thread_period_1ms_emit(const struct pid_config *n_var0);
void emitter_altitude_position_pid_attrSet_chan_101_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_altitude_position_pid_attrGet_chan_100_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_altitude_rate_pid_attrSet_chan_13_thread_period_1ms_emit(const struct pid_config *n_var0);
void emitter_altitude_rate_pid_attrSet_chan_99_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_altitude_rate_pid_attrGet_chan_98_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_nominal_throttle_attrSet_chan_12_thread_period_1ms_emit(const float *n_var0);
void emitter_nominal_throttle_attrSet_chan_97_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_nominal_throttle_attrGet_chan_96_thread_period_1ms_emit(const struct sequence_numbered_float *n_var0);
void emitter_reboot_req_attrSet_chan_95_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_48_thread_period_1ms_emit(const struct sequence_numbered_reboot_req *n_var0);
void emitter_parse_frame_chan_49_thread_period_1ms_emit(const struct sequence_numbered_float *n_var0);
void emitter_parse_frame_chan_50_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_51_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_parse_frame_chan_52_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_53_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_parse_frame_chan_54_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_55_thread_period_1ms_emit(const struct sequence_numbered_throttle_ui *n_var0);
void emitter_parse_frame_chan_56_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_57_thread_period_1ms_emit(const struct sequence_numbered_stab_config *n_var0);
void emitter_parse_frame_chan_58_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_59_thread_period_1ms_emit(const struct sequence_numbered_stab_config *n_var0);
void emitter_parse_frame_chan_60_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_61_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_parse_frame_chan_62_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_63_thread_period_1ms_emit(const struct sequence_numbered_pid_config *n_var0);
void emitter_parse_frame_chan_64_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_65_thread_period_1ms_emit(const struct sequence_numbered_tristate *n_var0);
void emitter_parse_frame_chan_66_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_67_thread_period_1ms_emit(const struct sequence_numbered_control_modes *n_var0);
void emitter_parse_frame_chan_68_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_69_thread_period_1ms_emit(const struct sequence_numbered_user_input *n_var0);
void emitter_parse_frame_chan_70_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_71_thread_period_1ms_emit(const struct sequence_numbered_rgb_led_setting *n_var0);
void emitter_parse_frame_chan_72_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_73_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_74_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_75_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_76_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_77_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_78_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_79_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_80_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_81_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_82_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_83_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_84_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_85_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_86_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_87_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_88_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_89_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_90_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_91_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_92_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_93_thread_period_1ms_emit(const uint32_t *n_var0);
void emitter_parse_frame_chan_94_thread_period_1ms_emit(const uint32_t *n_var0);

#ifdef __cplusplus
}
#endif
#endif /* __TOWER_GEN_THREAD_PERIOD_1MS_H__ */
