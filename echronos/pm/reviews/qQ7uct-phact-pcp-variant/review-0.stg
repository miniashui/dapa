RTOS Task Review
=======================

Task name: qQ7uct-phact-pcp-variant
Version reviewed: 95cecd2cadf7587515a3e5e59d6fca503dad02d6
Reviewer: stg
Date: 2015-03-10
Conclusion: Rework

Overall comments:

Comment 1: Rework
The new components are not documented.

[robs: Added]


Specific comments
=================

Location: components/blocking-mutex/implementation.c:63
Comment 2: Accepted
The name prio_pcp is redundant and not overly clear.
How about prio_ceiling?

[robs: Renamed both the component and the pystache tag to "prio(-|_)ceiling" rather than "prio(-|_)pcp".]

Location: components/phact/header.h:2
Comment 3: Rework
It seems that the code in this header file does not use any declarations made in stdint.h.
Can the #include statement be removed?

[robs: Removed]

Location: components/phact/implementation.c:61
Comment 4: Rework
"Note:" is superfluous as a comment is obviously meant to be noted by the reader.
I recommend to remove it.
I find it confusing that the comment says "When preemption is enabled" because the precondition of the function is that preemption is disabled.
Can you clarify this aspect?
I find it confusing that the comment says "a yield *should* be forced".
It sounds as if the preempt_pend() call was only necessary under conditions that are neither obvious from the code nor from the comment.
Assuming I understand the intended logic of the code correctly, I suggest to change the comment from "a yield should be forced as" to "yield because".

[robs: I should clarify, it means to say that when we enable preemption later, we would like to force a yield to occur (for the reasons stated), therefore we set preemption pending here.
Reworded accordingly.]

Location: components/phact/implementation.c:85
Comment 5: Rework
Same remarks as for previous comment.

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:23
Comment 6: Rework
Remove "Note: ".

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:33 and others
Comment 7: Rework
Function declarations are not mark pass-by-value arguments with the "const" keyword because its effect is irrelevant to the caller.

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:94
Comment 8: Rework
When internal assertions are disabled in the system configuration, the internal_assert() macro is defined as an empty macro.
Therefore, it does not need to be enclosed in {{#internal_asserts}} tags.

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:113
Comment 9: Rework
Remove "Note: "

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:128
Comment 10: Rework
`goto` statements are so 2014.
`break` statements are the new hotness.

[robs: Fixed]

Location: components/sched-prio-pcp/implementation.c:136
Comment 11: Rework
The `sched_index_to_taskid()` macro always evaluates to a value of type `TaskId`.
Therefore, the conditional cast to type `TaskId` is not necessary.
However, the inverse cast to type `TaskIdOption` is necessary when `assume_runnable` is false.

[robs: Fixed]
